# Important Links: https://github.com/kubernetes/ingress-nginx ; https://kubernetes.github.io/ingress-nginx/deploy/

# To install / upgrade and deploy the ingress-nginx controller 
#kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.7.1/deploy/static/provider/cloud/deploy.yaml
# ingress-nginx namespace is created and few pods are started in it
# To check them => kubectl get pods --namespace=ingress-nginx 

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations: # high level configuration for the ingress object
    kubernetes.io/ingress.class: 'nginx' # tells the ingress controller to use nginx
    nginx.ingress.kubernetes.io/use-regex: 'true' # tells the ingress controller to use regex
    nginx.ingress.kubernetes.io/rewrite-target: /$1 # describes how a copy of nginx behaves (rewrite the url to remove the /api part)
spec:
  rules:
    - http:
        paths:
          - path: /?(.*) # The request that has a path of '/' is forwarded to the client-cluster-ip-service
            pathType: Prefix
            backend:
              service:
                name: client-cluster-ip-service # from k8s/client-cluster-ip-service.yaml
                port:
                  number: 3000 # port inside the container/pod to forward the traffic to
          - path: /api/?(.*) # The request that has a path of '/api' is forwarded to the server-cluster-ip-service
            pathType: Prefix
            backend:
              service:
                name: server-cluster-ip-service # from k8s/server-cluster-ip-service.yaml
                port:
                  number: 5000 # port inside the container/pod to forward the traffic to


# kind: Namespace => Used to isolate different resources inside the kubernetes cluster
# kind: ConfigMap => Used to store/hold configuration data that can be used throughout the cluster

# Visit 'http://localhost/' to see the application running